{"version":3,"sources":["App/shared/img/VespaLogoWhite.png","App/shared/components/Link.js","App/shared/components/NavMenu.js","App/shared/components/SearchForm.js","App/Main.js","App/shared/components/Messages.js","App/shared/Fetcher.js","App/Search/ResultCard.js","App/Search/index.js","App/shared/components/Error.js","App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Link","to","props","href","children","startsWith","target","rel","NavBar","styled","Menu","NavMenu","sx","paddingLeft","paddingRight","width","secondary","inverted","fluid","Item","fitted","Image","src","logo","position","StyledSearchForm","Form","SearchForm","useState","window","location","search","query","setQuery","params","URLSearchParams","onSubmit","navigate","Input","icon","placeholder","className","onChange","e","value","set","toString","get","ContentGrid","Grid","Main","verticalAlign","textAlign","Column","size","Container","Segment","Loading","header","message","basic","Message","Header","Content","Error","error","backend","process","REACT_APP_BACKEND_URL","Fetch","method","url","reducer","state","action","credentials","fetcher","fetch","then","response","ok","text","json","JSON","parse","Promise","reject","code","status","contentType","headers","returnRaw","includes","isCanceled","promise","versionArg","version","initialState","loading","cancel","useReducer","dispatch","catch","StyledCard","Card","highlightReplacer","replace","nameFormatter","first","middle","last","matches","filter","s","join","match","Date","date","title","length","undefined","substring","AuthorsList","authors","showAll","setShowAll","limit","map","slice","onClick","preventDefault","ResultCard","fields","id","datestring","journal","abstract","body_text","content","fixedText","dangerouslySetInnerHTML","__html","formatText","Meta","div","SearchResults","console","log","root","Fragment","article","i","key","Search","Title","h2","ErrorGrid","getMessage","Row","App","flexDirection","bg","primary","component","React","path","default","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e82b080.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VespaLogoWhite.2fad86a7.png\";","import React from 'react';\nimport { Link as InternalLink } from '@reach/router';\n\nfunction Link({ to, ...props }) {\n  if ('download' in props)\n    return (\n      <a {...props} href={to}>\n        {props.children}\n      </a>\n    );\n  if (to && !to.startsWith('http') && !to.startsWith('/api/'))\n    return <InternalLink to={to} {...props} />;\n  return (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" {...props} href={to}>\n      {props.children}\n    </a>\n  );\n}\n\nexport default Link;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Box } from 'rebass';\nimport { Image, Menu } from 'semantic-ui-react';\nimport Link from 'App/shared/components/Link';\nimport logo from 'App/shared/img/VespaLogoWhite.png';\n\nconst NavBar = styled(Menu)`\n  &&& {\n    height: 64px;\n    margin: 0;\n\n    border-bottom: 1px solid rgba(63, 157, 216, 0.25);\n\n    .item,\n    .item > a,\n    .item > a:not(.ui) {\n      color: white;\n      font-weight: bold;\n    }\n\n    .item > a:hover {\n      color: #ffc43c;\n    }\n\n    .ui.image {\n      width: 100px;\n    }\n  }\n`;\n\nfunction NavMenu() {\n  return (\n    <Box sx={{ paddingLeft: '16px', paddingRight: '16px' }} width={1}>\n      <NavBar secondary inverted fluid>\n        <Menu.Item fitted>\n          <Link to=\"/\">\n            <Image src={logo} />\n          </Link>\n        </Menu.Item>\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <Link to=\"http://blog.vespa.ai/\">Blog</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"https://twitter.com/vespaengine\">Twitter</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"https://docs.vespa.ai/documentation/\">Docs</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"https://github.com/vespa-engine\">GitHub</Link>\n          </Menu.Item>\n          <Menu.Item>\n            <Link to=\"https://github.com/vespa-engine/vespa/issues\">\n              Issues\n            </Link>\n          </Menu.Item>\n        </Menu.Menu>\n      </NavBar>\n    </Box>\n  );\n}\n\nexport default NavMenu;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Form } from 'semantic-ui-react';\nimport { navigate } from '@reach/router';\n\nconst StyledSearchForm = styled(Form)`\n  &&& {\n    font-size: 1.1rem;\n    display: flex;\n    width: 100%;\n    max-width: 800px;\n    margin: 0 auto;\n\n    .input {\n      width: 100%;\n    }\n  }\n`;\n\nfunction SearchForm() {\n  const [query, setQuery] = useState(window.location.search);\n  const params = new URLSearchParams(query);\n  const set = () => setQuery(params.toString());\n\n  return (\n    <StyledSearchForm onSubmit={() => navigate('/search?' + params)}>\n      <Form.Input\n        icon=\"search\"\n        placeholder=\"Search...\"\n        className=\"input\"\n        onChange={(e, { value }) => set(params.set('query', value))}\n        value={params.get('query') || ''}\n      />\n    </StyledSearchForm>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Grid } from 'semantic-ui-react';\nimport SearchForm from 'App/shared/components/SearchForm';\n\nconst ContentGrid = styled(Grid)`\n  &&& {\n    font-size: 1.1rem;\n\n    .column {\n      margin-top: 200px;\n      padding: 0;\n    }\n\n    h1 {\n      font-size: 3.5rem;\n      font-weight: 300;\n    }\n  }\n`;\n\nfunction Main() {\n  return (\n    <ContentGrid verticalAlign=\"middle\" textAlign=\"center\">\n      <Grid.Column>\n        <h1 size=\"huge\">CORD-19 Search</h1>\n        <SearchForm />\n      </Grid.Column>\n    </ContentGrid>\n  );\n}\n\nexport default Main;\n","/**\n * Component to encapsulate messages that should be displayed on page (typically in place of something\n * else if it failed to load)\n */\nimport React from 'react';\nimport { Message, Segment } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Container = styled(Segment)`\n  &&& {\n    width: 100%;\n    margin: 0;\n    .ui.message {\n      background: transparent;\n      box-shadow: none;\n    }\n    .ui.warning.message {\n      background: #fffaf3;\n    }\n    .ui.error.message {\n      background: #fff6f6;\n    }\n  }\n`;\n\nconst Loading = ({ header, message }) => (\n  <Container basic textAlign={'center'}>\n    <Message>\n      {header && <Message.Header>{header}</Message.Header>}\n      <Message.Content>{message}</Message.Content>\n    </Message>\n  </Container>\n);\n\nconst Warning = ({ header, message }) => (\n  <Container basic textAlign={'center'}>\n    <Message warning>\n      {header && <Message.Header>{header}</Message.Header>}\n      <Message.Content>{message}</Message.Content>\n    </Message>\n  </Container>\n);\n\nconst Error = ({ header, message }) => (\n  <Container basic textAlign={'center'}>\n    <Message error>\n      {header && <Message.Header>{header}</Message.Header>}\n      <Message.Content>{message}</Message.Content>\n    </Message>\n  </Container>\n);\n\nexport { Loading, Warning, Error };\n","import { useReducer } from 'react';\n\nconst backend =\n  process.env.REACT_APP_BACKEND_URL ||\n  'https://ge78jthota.execute-api.us-east-1.amazonaws.com/default';\n\nfunction Get(url, params) {\n  return Fetch('GET', url, params);\n}\n\nfunction Post(url, params) {\n  return Fetch('POST', url, params);\n}\n\nfunction Put(url, params) {\n  return Fetch('PUT', url, params);\n}\n\nfunction Patch(url, params) {\n  return Fetch('PATCH', url, params);\n}\n\nfunction Delete(url, params) {\n  return Fetch('DELETE', url, params);\n}\n\nfunction Fetch(method, url, params) {\n  function reducer(state, action) {\n    return { ...state, ...action };\n  }\n\n  if (!url.startsWith('http')) url = backend + url;\n\n  params = params || {};\n  params.method = method;\n  params.credentials = 'same-origin'; //Not default for all browsers yet\n\n  const fetcher = () =>\n    fetch(url, params)\n      // Reject promise if response is not OK\n      .then(response => {\n        if (response.ok) return response;\n\n        return response.text().then(text => {\n          let message = text;\n          try {\n            const json = JSON.parse(text);\n            if ('message' in json) message = json.message;\n          } catch (e) {\n            // not JSON\n          }\n          return Promise.reject({ message, code: response.status });\n        });\n      })\n\n      // automatically return the data if it's a known content type\n      .then(response => {\n        const contentType = response.headers.get('content-type');\n        if (!contentType || params.returnRaw) return response;\n        if (contentType.includes('application/json')) {\n          return response.json();\n        } else if (contentType.includes('text/plain')) {\n          return response.text();\n        }\n        return response;\n      });\n\n  let isCanceled = false;\n  const useFetcher = versionArg => {\n    const version = versionArg || 0;\n    const initialState = {\n      url: url,\n      loading: null,\n      cancel: () => {\n        isCanceled = true;\n      },\n      response: null,\n      error: null,\n      version: version,\n    };\n\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    if (url !== state.url || version !== state.version) dispatch(initialState);\n\n    if (state.loading === null) {\n      dispatch({ loading: true });\n      fetcher()\n        .then(response => {\n          if (!isCanceled)\n            dispatch({\n              loading: false,\n              response: response,\n              version: version,\n            });\n        })\n        .catch(error => {\n          if (!isCanceled)\n            dispatch({ loading: false, error: error, version: version });\n        });\n    }\n    return { ...state, loading: state.loading === null || state.loading };\n  };\n\n  return { promise: fetcher, state: useFetcher };\n}\n\nexport { Get, Post, Put, Patch, Delete };\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Card } from 'semantic-ui-react';\nimport Link from 'App/shared/components/Link';\n\nconst StyledCard = styled(Card)`\n  &.card {\n    width: 100%;\n  }\n\n  .header {\n    font-weight: bold;\n    padding: 5px;\n  }\n\n  .meta {\n    padding: 5px;\n\n    span {\n      float: right;\n    }\n  }\n\n  .meta:after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n\n  .content {\n    border-top: 1px solid rgba(34, 36, 38, 0.1);\n    padding: 0.5em;\n  }\n`;\n\nconst highlightReplacer = (text, replace) =>\n  text.replace(/<(\\/?)hi>/g, replace);\nconst formatText = text => {\n  if (!text) return null;\n  const fixedText = highlightReplacer(text.replace(/<sep \\/>/g, '…'), '<$1b>');\n  return (\n    <p\n      dangerouslySetInnerHTML={{\n        __html: fixedText,\n      }}\n    />\n  );\n};\n\nconst nameFormatter = ({ first, middle, last }) => {\n  if (!last) return first || middle;\n  const matches = [first, middle]\n    .filter(s => s)\n    .join(' ')\n    .match(/(?:(?=^|\\s)(\\w)|([A-Z]))/g);\n\n  return (matches ? matches.join('') + ' ' : '') + last;\n};\n\nfunction Date({ date }) {\n  return !date ? null : (\n    <span title={date.length === 4 ? date : undefined}>\n      {date.substring(0, 4)}\n    </span>\n  );\n}\n\nfunction AuthorsList({ authors }) {\n  const [showAll, setShowAll] = useState(false);\n  const onShowAll = e => {\n    e.preventDefault();\n    setShowAll(true);\n  };\n  if (!authors) return null;\n  const limit = showAll || authors.length < 12 ? authors.length : 10;\n  return (\n    <div>\n      {authors\n        .map(nameFormatter)\n        .slice(0, limit)\n        .join(', ')}\n      {limit < authors.length ? (\n        <>\n          {' '}\n          <a href=\"#root\" onClick={onShowAll}>\n            and {authors.length - limit} more\n          </a>\n        </>\n      ) : null}\n    </div>\n  );\n}\n\nfunction ResultCard({\n  fields: { id, title, datestring, journal, abstract, body_text, authors },\n}) {\n  const content = formatText(abstract || body_text);\n  return (\n    <StyledCard>\n      <Card.Header>\n        <Link to={`${process.env.PUBLIC_URL}/article/${id}`}>\n          {highlightReplacer(title, '')}\n        </Link>\n      </Card.Header>\n      <Card.Meta>\n        {journal}\n        <Date date={datestring} />\n        <AuthorsList authors={authors} />\n      </Card.Meta>\n      {content && <Card.Content>{content}</Card.Content>}\n    </StyledCard>\n  );\n}\n\nexport default ResultCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SearchForm from 'App/shared/components/SearchForm';\nimport { Loading, Error } from 'App/shared/components/Messages';\nimport { Get } from 'App/shared/Fetcher';\nimport ResultCard from './ResultCard';\n\nconst Container = styled.div`\n  &&& {\n    font-size: 1.1rem;\n    width: 100%;\n    max-width: 1000px;\n    margin: 2rem auto;\n\n    .column {\n      padding: 0;\n    }\n  }\n`;\n\nfunction SearchResults() {\n  const query = new URLSearchParams(window.location.search);\n  query.set('type', 'any');\n  const { loading, response, error } = Get(\n    '/search/?' + query.toString()\n  ).state();\n\n  if (loading) return <Loading message=\"Searching...\" />;\n  if (error)\n    return <Error message={error.message || 'Unknown search error...'} />;\n\n  console.log(response);\n  if (!('children' in response.root)) return null;\n  return (\n    <React.Fragment>\n      {response.root.children.map((article, i) => (\n        <ResultCard key={i} {...article} />\n      ))}\n    </React.Fragment>\n  );\n}\n\nfunction Search() {\n  return (\n    <Container>\n      <SearchForm />\n      <SearchResults />\n    </Container>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nconst Title = styled.h2`\n  font-weight: 400;\n  color: #3f9dd8;\n`;\n\nconst ErrorGrid = styled(Grid)`\n  height: 80vh;\n`;\n\nconst getMessage = code => {\n  switch (code) {\n    case 403:\n      return 'Sorry, you are not authorized to view this page.';\n    case 404:\n      return 'Sorry, the page you were looking for does not exist.';\n    case 500:\n      return 'Oops... something went wrong.';\n    default:\n      return 'Unknown error - really, I have no idea what is going on here.';\n  }\n};\n\nfunction Error({ code = 404 }) {\n  const message = getMessage(code);\n\n  return (\n    <ErrorGrid textAlign=\"center\" verticalAlign=\"middle\">\n      <Grid.Row>\n        <Grid.Column width={8}>\n          <Title>{message}</Title>\n        </Grid.Column>\n      </Grid.Row>\n    </ErrorGrid>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport { Flex, Box } from 'rebass';\nimport NavMenu from 'App/shared/components/NavMenu';\nimport Main from './Main';\nimport Search from './Search';\nimport Error from 'App/shared/components/Error';\n\nfunction App() {\n  return (\n    <Flex flexDirection=\"column\">\n      <Box width={1} bg=\"#3F9CD8\">\n        <NavMenu />\n      </Box>\n      <Box width={1}>\n        <Router primary={false} component={React.Fragment}>\n          <Main path=\"/\" />\n          <Search path=\"/search\" />\n          <Error default />\n        </Router>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fomantic-ui-css/semantic.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (process.env.NODE_ENV !== 'production') {\n  const whyDidYouRender = require('@welldone-software/why-did-you-render');\n  whyDidYouRender(React);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}